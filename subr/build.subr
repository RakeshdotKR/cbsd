# route args param for repo, mkbsdstore, csup, buildworld-related command
[ -n "${oarch}" ] && arch=${oarch}
if [ -n "${over}" ]; then
	# empty jail?
	[ "${ver}" != "empty" ] && ver=${over}
fi
[ -n "${ostable}" ] && stable=${ostable}
[ -n "${otarget_arch}" ] && target_arch=${otarget_arch}

if [ -z "${arch}" -o "${arch}" = "native" ]; then
	arch=$( ${UNAME_CMD} -m )
	[ "${arch}" = "x86_64" ] && arch="amd64"
	if [ "${emulator}" = "jail" ]; then
		cbsdsqlrw local "UPDATE jails SET arch=\"${arch}\" WHERE jname=\"${jname}\""
	fi
fi

# Keep in sync with init_target_arch
if [ -z "${target_arch}" ]; then
	# check for well-known target_arch by arch
	case "${arch}" in
		i386)
			target_arch="i386"
			;;
		*)
			# inherit target_arch from arch
			target_arch=$( ${UNAME_CMD} -p )
			[ "${target_arch}" = "x86_64" ] && target_arch="amd64"
			;;
	esac
fi

if [ -z "${ver}" -o "${ver}" = "native" ]; then
	# ver=$( ${SYSCTL_CMD} -n kern.osrelease | ${CUT_CMD} -d - -f 1 )
	# we preffer uname as source, due to some environment have UNAME_r for overwrite version
	tmpver=$( ${UNAME_CMD} -r )
	ver=${tmpver%%-*}
	unset tmpver
fi

[ "${stable}" = "1" -a -z "${over}" ] && ver=${ver%%.*}

if [ "${ver}" = "head" ]; then
	stable=1	# head always is stable

	#	todo: link with share/FreeBSD-git_branches.conf + srcup
	#	todo: link with tools/repo getbases for CURRENT
	#	todo: link with /usr/local/cbsd/etc/defaults/FreeBSD-sources.conf
	#	todo: link with /usr/local/cbsd/etc/defaults/FreeBSD-bases.conf
	#	todo: link with /usr/local/cbsd/etc/defaults/FreeBSD-kernels.conf

	case "${platform}" in
		DragonFly)
			ver="${DRAGONFLYBSD_VER_CURRENT}"	# vars from global.conf
			;;
		*)
			ver="${FREEBSD_VER_CURRENT}"	# vars from global.conf
			;;
	esac
fi
[ -z "${maxjobs}" ] && maxjobs=$( ${SYSCTL_CMD} -n hw.ncpu )
[ -z "${clean}" ] && clean=0
